[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (JetBrains s.r.o Java 11.0.6)
[debug]       Load.loadUnit: plugins took 296.371ms
[debug]       Load.loadUnit: defsScala took 1.0204ms
[debug] [Loading] Scanning directory C:\Users\Rares2\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rares2\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 54.5553 ms
[debug]           Load.resolveProject(global-plugins) took 111.3964ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Rares2\.sbt\1.0\plugins, plugins: List(<none>))) took 235.7728ms
[debug] [Loading] Done in C:\Users\Rares2\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 305.6487ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5477ms
[debug]     Load.loadUnit(file:/C:/Users/Rares2/.sbt/1.0/plugins/, ...) took 675.2802ms
[debug]   Load.apply: load took 1167.5628ms
[debug]   Load.apply: resolveProjects took 15.1719ms
[debug]   Load.apply: finalTransforms took 187.6311ms
[debug]   Load.apply: config.delegates took 25.5568ms
[debug]   Load.apply: Def.make(settings)... took 3793.3692ms
[debug]   Load.apply: structureIndex took 440.7708ms
[debug]   Load.apply: mkStreams took 2.7495ms
[info] loading global plugins from C:\Users\Rares2\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10702.7804ms
[debug]           Load.loadUnit: plugins took 66.8871ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.1462 ms
[debug]               Load.resolveProject(finiteautomata-build) took 6.8194ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finiteautomata-build, base: C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata\project, plugins: List(<none>))) took 12.9595ms
[debug] [Loading] Done in C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata\project, returning: (finiteautomata-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 15.6242ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0211ms
[debug]         Load.loadUnit(file:/C:/Users/Rares2/Desktop/an3/sem1Eu/FLCD/lab/FormalLanguageAndCompilerDesign/FiniteAutomata/project/, ...) took 84.5229ms
[debug]       Load.apply: load took 88.3768ms
[debug]       Load.apply: resolveProjects took 0.1902ms
[debug]       Load.apply: finalTransforms took 20.9752ms
[debug]       Load.apply: config.delegates took 0.5916ms
[debug]       Load.apply: Def.make(settings)... took 275.5528ms
[debug]       Load.apply: structureIndex took 96.2008ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5970.955ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata
[debug]       Load.loadUnit: mkEval took 9.7469ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.1697 ms
[info] loading settings for project finiteautomata from build.sbt ...
[debug]         Load.resolveProject(finiteautomata) took 4.6325ms
[debug]       Load.loadTransitive: finalizeProject(Project(id finiteautomata, base: C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata, plugins: List(<none>))) took 9.9199ms
[debug] [Loading] Done in C:\Users\Rares2\Desktop\an3\sem1Eu\FLCD\lab\FormalLanguageAndCompilerDesign\FiniteAutomata, returning: (finiteautomata)
[debug]     Load.loadUnit: loadedProjectsRaw took 5718.4618ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.8978ms
[debug]   Load.loadUnit(file:/C:/Users/Rares2/Desktop/an3/sem1Eu/FLCD/lab/FormalLanguageAndCompilerDesign/FiniteAutomata/, ...) took 11702.3675ms
[debug] Load.apply: load took 11706.0418ms
[debug] Load.apply: resolveProjects took 0.259ms
[debug] Load.apply: finalTransforms took 16.4414ms
[debug] Load.apply: config.delegates took 0.3497ms
[debug] Load.apply: Def.make(settings)... took 177.066ms
[debug] Load.apply: structureIndex took 64.3399ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to FiniteAutomata (in build file:/C:/Users/Rares2/Desktop/an3/sem1Eu/FLCD/lab/FormalLanguageAndCompilerDesign/FiniteAutomata/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-5b8cb5cadcaaa1c64c89
